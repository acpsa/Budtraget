########################################
			First Time things
########################################

1.	Trust dev certs
	`dotnet dev-certs https --trust`
2.	Confirm if ports are correct
3.	URL to use http://localhost:5126/weatherforecast


########################################
            VS Code                     
########################################


********************
    VARIABLES       
********************
export IMGN="budtraget-api-dock"
export IMGV="1.0"
export CONN="budtraget-api-dock-con"
echo $IMGN:$IMGV


********************
    DOCKER FILE     
********************
cd "/Users/naveenchauhan/RiderProjects/Budtraget/Budtraget.Api"

=> BUILD
docker build -t budtraget-api-dock:1.0 .
docker build -t $IMGN:$IMGV .
----------------------------------------------------------------

=> RUN
docker ps -q -f name=Budtraget || docker run -d --rm --name Budtraget -p 8080:8080 -p 5005:5005 budtraget-api
docker ps -q -f name=$CONN || docker run -d --rm --name $CONN -p 8080:8080 -p 5005:5005 $IMGN:$IMGV
docker ps -q -f name=$CONN
docker run -d --rm --name $CONN -p 8080:8080 -p 5005:5005 $IMGN:$IMGV
----------------------------------------------------------------

=> START
docker start $CONN



********************
    DOCKER COMPOSE  
********************

=> BUILD
docker-compose -f docker-compose.yml -f docker-compose.debug.yml build --no-cache
----------------------------------------------------------------

=> COMPOSE UP
docker-compose -f docker-compose.debug.yml up --build

=> COMPOSE down
docker-compose -f docker-compose.debug.yml down

=> EXEC for VSCode Debugger
docker exec -it $(docker ps -q -f name=budtraget-compose-dev) /remote_debugger/vsdbg --interpreter=vscode

########################################
                Rider
########################################

********************
        DOCKER  
********************

1. Create dockerfile(.debug)
2. Create Run/Debug configuration with the docker file
3. Run(NOT Debug) the Configuration
4. Attach Debugger in Rider
	-	Go to Run > Attach to Process
	-	Select the Docker tab
	-	Pick the container: <From step 3>
	-	Choose the process: dotnet running Budtraget.Api.dll
	-	Click Attach with .NET Debugger
	-	Breakpoints will now hit as expected!


********************
    DOCKER COMPOSE  
********************

1. Create docker-compose-compose(.debug)
2. Build and run docker compose
    -   docker compose -f docker-compose.debug.yml build --no-cache
    -   docker compose -f docker-compose.debug.yml up
3. Attach Debugger in Rider
	-	Go to Run > Attach to Process
	-	Select the Docker tab
	-	Pick the container: <From step 3>
	-	Choose the process: dotnet running Budtraget.Api.dll
	-	Click Attach with .NET Debugger
	-   Breakpoints will now hit as expected!